// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["queryCompiler", "driverAdapters", "relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Member {
  id             BigInt     @id @default(autoincrement()) @db.BigInt
  name           String     @db.VarChar(255)
  email          String     @db.VarChar(255)
  hashedPassword String?    @map("hashed_password") @db.VarChar(128)
  phone          String     @db.VarChar(255)
  role           MemberRole @default(GUEST)
  lastLoginAt    DateTime?  @map("last_login_at") @db.DateTime(0)
  membershipAt   DateTime?  @map("membership_at") @db.DateTime(0)
  createdAt      DateTime   @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime   @default(now()) @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt      DateTime?  @map("deleted_at") @db.DateTime(0)

  Item  Item[]
  Order Order[]

  @@map("members")
}

enum MemberRole {
  ADMIN
  SELLER
  CUSTOMER
  GUEST
}

model Item {
  id             BigInt         @id @default(autoincrement()) @db.BigInt
  name           String         @db.VarChar(255)
  supplyPrice    Decimal        @map("supply_price") @db.Decimal(10, 3)
  vat            Decimal        @map("vat") @db.Decimal(10, 3)
  totalPrice     Decimal        @map("total_price") @db.Decimal(10, 3)
  isTaxFree      Boolean        @default(false) @map("is_tax_free")
  sku            String         @default(uuid()) @db.VarChar(255)
  stock          Int            @default(0) @db.Int
  description    String?        @db.Text
  itemSaleStatus ItemSaleStatus @default(DENY) @map("item_sale_status")
  createdAt      DateTime       @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt      DateTime       @default(now()) @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt      DateTime?      @map("deleted_at") @db.DateTime(0)

  member   Member @relation(fields: [memberId], references: [id])
  memberId BigInt @map("member_id") @db.BigInt

  OrderItem OrderItem[]

  @@map("items")
}

enum ItemSaleStatus {
  ALLOW
  DENY
}

model Order {
  id          BigInt    @id @default(autoincrement()) @db.BigInt
  orderNumber String    @map("order_number") @db.VarChar(255)
  totalPrice  Decimal   @map("total_price") @db.Decimal(10, 3)
  createdAt   DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt   DateTime? @map("deleted_at") @db.DateTime(0)

  member   Member @relation(fields: [memberId], references: [id])
  memberId BigInt @map("member_id") @db.BigInt

  OrderItem OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        BigInt    @id @default(autoincrement()) @db.BigInt
  price     Decimal   @db.Decimal(10, 3)
  quantity  Int       @default(0) @db.Int
  isTaxFree Boolean   @default(false) @map("is_tax_free")
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt DateTime? @map("deleted_at") @db.DateTime(0)

  item   Item   @relation(fields: [itemId], references: [id])
  itemId BigInt @map("item_id") @db.BigInt

  order   Order  @relation(fields: [orderId], references: [id])
  orderId BigInt @map("order_id") @db.BigInt

  @@map("order_items")
}
